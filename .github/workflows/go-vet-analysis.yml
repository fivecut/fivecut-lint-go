name: Go Vet Analysis-20250416
run-name: "run for ${{ inputs.repo_url }}"

on:
  workflow_dispatch: # 手动触发
    inputs:
      repo_url:
        description: "The repository URL to analyze"
        required: true

permissions:  # 需要写入 issue 的权限
  issues: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      # - name: Install go-critic
      #   run: |
      #     go install github.com/go-critic/go-critic/cmd/gocritic@latest
      #   shell: bash

      - name: Add Go binaries to PATH
        run: |
          echo "$HOME/go/bin" >> $GITHUB_PATH
        shell: bash

      - name: Debug environment
        run: |
          echo "Current shell: $SHELL"
          echo "Current PATH: $PATH"
          which mkdir
        shell: bash

      - name: Analyze the repository
        run: |
          repo="${{ inputs.repo_url }}"
          echo "Processing repository: $repo"
          repo_name=$(basename -s .git "$repo")

          # 创建临时目录并克隆仓库
          mkdir -p repos
          cd repos
          git clone "$repo" "$repo_name"
          cd "$repo_name"

          # 新增：记录仓库大小
          echo "仓库大小: $(du -sh)" > ../../repo-size-$repo_name.txt

          # 运行 go vet 并捕获输出
          go vet ./... > ../../go-vet-report-$repo_name.txt 2> ../../go-vet-errors-$repo_name.txt || true

          # 返回上层目录
          cd ..
          rm -rf "$repo_name"
        shell: bash

      - name: Collect analysis reports
        run: |
          repo_name=$(basename -s .git "${{ inputs.repo_url }}")
          # 读取仓库大小
          REPO_SIZE=$(cat repo-size-$repo_name.txt 2>/dev/null || echo "无法获取仓库大小")

          # 将报告和错误合并
          REPORTS=$(cat go-vet-report-$repo_name.txt 2>/dev/null || echo "没有生成报告")
          ERRORS=$(cat go-vet-errors-$repo_name.txt 2>/dev/null || echo "没有错误")

          # 将信息设置为输出变量
          echo "repo_size<<EOF" >> $GITHUB_ENV
          echo -e "### 仓库大小:\n$REPO_SIZE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "reports<<EOF" >> $GITHUB_ENV
          echo -e "### $repo_name 报告:\n\`\`\`\n$REPORTS\n\`\`\`" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "errors<<EOF" >> $GITHUB_ENV
          echo -e "### $repo_name 错误:\n\`\`\`\n$ERRORS\n\`\`\`" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Create or update issue with analysis results
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: 1
          body: |
            # Go Vet 静态分析报告

            ## 项目路径
            ${{ inputs.repo_url }}

            ## 仓库大小
            ${{ env.repo_size }}

            ## 分析错误
            ${{ env.errors }}

            ## 详细报告
            ${{ env.reports }}